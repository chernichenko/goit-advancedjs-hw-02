{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nlet timerInterval;\n\nconst startButton = document.querySelector('[data-start]');\nconst datePicker = document.getElementById(\"datetime-picker\");\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\n\nflatpickr(datePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      startButton.disabled = true;\n      iziToast.error({ message: \"Please choose a date in the future\" });\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const timeDifference = userSelectedDate - now;\n\n  if (timeDifference <= 0) {\n    clearInterval(timerInterval);\n    startButton.disabled = false;\n    datePicker.disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nstartButton.addEventListener(\"click\", () => {\n  startButton.disabled = true;\n  datePicker.disabled = true;\n\n  timerInterval = setInterval(updateTimer, 1000);\n  updateTimer();\n});\n"],"names":["userSelectedDate","timerInterval","startButton","datePicker","daysEl","hoursEl","minutesEl","secondsEl","flatpickr","selectedDates","iziToast","addLeadingZero","value","convertMs","ms","updateTimer","timeDifference","days","hours","minutes","seconds"],"mappings":"+IAKA,IAAIA,EACAC,EAEJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDL,EAAY,SAAW,GAEvBM,EAAUL,EAAY,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQM,EAAe,CACrBT,EAAmBS,EAAc,CAAC,EAE9BT,EAAmB,IAAI,MACzBE,EAAY,SAAW,GACvBQ,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,GAEhER,EAAY,SAAW,EAE1B,CACH,CAAC,EAED,SAASS,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA,CAEA,SAASC,GAAc,CAErB,MAAMC,EAAiBhB,EADX,IAAI,KAGhB,GAAIgB,GAAkB,EAAG,CACvB,cAAcf,CAAa,EAC3BC,EAAY,SAAW,GACvBC,EAAW,SAAW,GACtB,MACD,CAED,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYP,EAAUG,CAAc,EAElEZ,EAAO,YAAcO,EAAeM,CAAI,EACxCZ,EAAQ,YAAcM,EAAeO,CAAK,EAC1CZ,EAAU,YAAcK,EAAeQ,CAAO,EAC9CZ,EAAU,YAAcI,EAAeS,CAAO,CAChD,CAEAlB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAW,SAAW,GAEtBF,EAAgB,YAAYc,EAAa,GAAI,EAC7CA,GACF,CAAC"}